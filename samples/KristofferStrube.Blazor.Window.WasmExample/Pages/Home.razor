@page "/"
@implements IAsyncDisposable
@inject IWindowService WindowService

@if (!Popup.HasValue)
{
    <PageTitle>Blazor Window - Home</PageTitle>

    <p>On this page we try out opening the different user prompts. To try out the other parts of the interface check the menu.</p>

    <button class="btn btn-primary" @onclick=Alert >Open Alert</button>
    <button class="btn btn-primary" @onclick=Confirm >Open Confirm dialog</button>
    <button class="btn btn-primary" @onclick=Prompt >Open Prompt</button>
    <br />
    @if (response is not null)
    {
        <p>response: <code>@response</code></p>
    }
}
else
{
    <PageTitle>Blazor Window - Pop-up</PageTitle>

    <h2>Pop-up</h2>

    <p>
        This is a popup. When you post a message from here the opener window is notified of this.
    </p>

    <label for="message">Message: </label>
    <input @bind=message id="message" class="form-control" />
    <br />
    <button @onclick=PostMessage class="btn btn-primary">Post</button>
}

@code {
    string? response;

    string message = "My Pop-up Message";
    Window window = default!;

    [SupplyParameterFromQuery]
    public int? Popup { get; set; }

    protected override async Task OnInitializedAsync()
    {
        window = await WindowService.GetWindowAsync();
    }

    private async Task Alert()
    {
        await window.AlertAsync("You need to close this to continue!");
        response = null;
    }

    private async Task Confirm()
    {
        response = (await window.ConfirmAsync("You need to confirm this to continue!")).ToString();
    }

    private async Task Prompt()
    {
        response = (await window.PromptAsync("What is your name?", "Bob"))?.ToString();
    }

    private async Task PostMessage()
    {
        await window.PostMessageAsync($"From Pop-up {Popup} \"{message}\"");
    }

    public async ValueTask DisposeAsync()
    {
        if (window is not null)
        {
            await window.DisposeAsync();
        }
    }
}